{"ast":null,"code":"var _jsxFileName = \"W:\\\\portfolio moje\\\\portfolio\\\\src\\\\components\\\\Projects\\\\RaportowanieCarousel.jsx\";\nimport React from \"react\";\nimport Slider from \"react-slick\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RaportowanieCarousel = () => {\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 700,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: false\n  };\n  return /*#__PURE__*/_jsxDEV(Slider, {\n    ...settings,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slide rp1\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../images/rap1.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"After selecting the folder where sample photos (both correct and incorrect) will appear, the program begins monitoring this folder. When an inconsistent sample appears, it will prompt us to specify the type of defect encountered. A window with predefined defects will appear due to the repeatability of their occurrence. Previously, the operator had to manually write it down on a paper in the right place.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slide rp2\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../images/rap2.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The program first checks the OP number of the sample. Then, it adds this OP number along with the sample name, photo, and selected type of defect to our NG Report, as described above.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slide rp3\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../images/rap3.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"At any time with the push of a button (first or second shift, respectively), the operator can check how many pictures and measurements (Number of pictures with measurements/Total number of pictures taken) he has taken on his shift.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slide rp4\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../images/rap4.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Due to not measuring from the sample with the smallest number to the one with the largest, the samples in the report are not in sequence. Using the \\\"Sort\\\" button, the program automatically puts them in the correct order in the table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slide rp5\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../images/rap5.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slide rp6\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../images/rap6.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = RaportowanieCarousel;\nexport default RaportowanieCarousel;\nvar _c;\n$RefreshReg$(_c, \"RaportowanieCarousel\");","map":{"version":3,"names":["React","Slider","jsxDEV","_jsxDEV","RaportowanieCarousel","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["W:/portfolio moje/portfolio/src/components/Projects/RaportowanieCarousel.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\nconst RaportowanieCarousel = () => {\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 700,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: false,\r\n  };\r\n\r\n  return (\r\n    <Slider {...settings}>\r\n      <div className=\"slide rp1\">\r\n        <img src=\"../images/rap1.png\" alt=\"\" />\r\n        <p>\r\n          After selecting the folder where sample photos (both correct and\r\n          incorrect) will appear, the program begins monitoring this folder.\r\n          When an inconsistent sample appears, it will prompt us to specify the\r\n          type of defect encountered. A window with predefined defects will\r\n          appear due to the repeatability of their occurrence. Previously, the\r\n          operator had to manually write it down on a paper in the right place.\r\n        </p>\r\n      </div>\r\n      <div className=\"slide rp2\">\r\n        <img src=\"../images/rap2.png\" alt=\"\" />\r\n        <p>\r\n          The program first checks the OP number of the sample. Then, it adds\r\n          this OP number along with the sample name, photo, and selected type of\r\n          defect to our NG Report, as described above.\r\n        </p>\r\n      </div>\r\n      <div className=\"slide rp3\">\r\n        <img src=\"../images/rap3.png\" alt=\"\" />\r\n        <p>\r\n          At any time with the push of a button (first or second shift,\r\n          respectively), the operator can check how many pictures and\r\n          measurements (Number of pictures with measurements/Total number of\r\n          pictures taken) he has taken on his shift.\r\n        </p>\r\n      </div>\r\n      <div className=\"slide rp4\">\r\n        <img src=\"../images/rap4.png\" alt=\"\" />\r\n        <p>\r\n          Due to not measuring from the sample with the smallest number to the\r\n          one with the largest, the samples in the report are not in sequence.\r\n          Using the \"Sort\" button, the program automatically puts them in the\r\n          correct order in the table\r\n        </p>\r\n      </div>\r\n      <div className=\"slide rp5\">\r\n        <img src=\"../images/rap5.png\" alt=\"\" />\r\n      </div>\r\n      <div className=\"slide rp6\">\r\n        <img src=\"../images/rap6.png\" alt=\"\" />\r\n      </div>\r\n    </Slider>\r\n  );\r\n};\r\n\r\nexport default RaportowanieCarousel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}